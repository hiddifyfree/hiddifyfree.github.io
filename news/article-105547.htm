<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifyfree.github.io/news/article-105547.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>加载、链接和初始化（java高级编程1.2.5）</title>
        <meta name="description" content="JVM：加载、链接和初始化 JVM要解释Java字节码，就必须对所需的类和接口执行如下3步操作： (1)加载：JVM在加载类时，会查找该类或该接口的二进制表示，并根据找到的二进制表示(通常是由Java" />
        <link rel="icon" href="/assets/website/img/hiddifyfree/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyFree免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifyfree.github.io/news/article-105547.htm" />
    <meta property="og:site_name" content="HiddifyFree免费节点官网" />
    <meta property="og:title" content="加载、链接和初始化（java高级编程1.2.5）" />
    <meta property="og:image" content="https://hiddifyfree.github.io/uploads/20240811-1/110de6a0486a9ee6f5b687fff55d6c2d.webp" />
        <meta property="og:release_date" content="2025-04-27T08:29:27" />
    <meta property="og:updated_time" content="2025-04-27T08:29:27" />
        <meta property="og:description" content="JVM：加载、链接和初始化 JVM要解释Java字节码，就必须对所需的类和接口执行如下3步操作： (1)加载：JVM在加载类时，会查找该类或该接口的二进制表示，并根据找到的二进制表示(通常是由Java" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="加载、链接和初始化（java高级编程1.2.5）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- stylesheet css -->
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo_themes/default/default.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- google web font css -->
    <link href='http://fonts.googleapis.com/css?family=Raleway:400,300,600,700' rel='stylesheet' type='text/css'>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FSSSCJKV0R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FSSSCJKV0R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".navbar-collapse" data-page="detail">
        <!-- navigation -->
    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                </button>
                <a href="/" class="navbar-brand">
                                <span>Hiddify Free</span>
                                </a>
            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
            </div>
        </div>
    </div>
    <!-- home section -->
    <div id="home">
        <div class="container">
            <div class="row">
                <div class="col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6">
                    <h1>加载、链接和初始化（java高级编程1.2.5）</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- about section -->
    <div id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="htmledit_views"> <p class="MsoNormal" align="center"><strong><span lang="EN-US">JVM</span></strong><strong>：加载、链接和初始化</strong><strong><span lang="EN-US"></span></strong></p> <p class="MsoNormal" align="left"><span lang="EN-US">JVM</span>要解释<span lang="EN-US">Java</span>字节码，就必须对所需的类和接口执行如下<span lang="EN-US">3</span>步操作：<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(1)</span>加载：<span lang="EN-US">JVM</span>在加载类时，会查找该类或该接口的二进制表示，并根据找到的二进制表示<span lang="EN-US">(</span>通常是由<span lang="EN-US">Java</span>编译器创建的类文件<span lang="EN-US">)</span>创建一个<span lang="EN-US">Class</span>对象。该<span lang="EN-US">Class</span>对象中封装了类或接口的运行时状态。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(2)</span>链接：链接这一过程是指取得已加载的类或接口、结合<span lang="EN-US">JVM</span>运行时环境、准备执行该类或该接口。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(3)</span>初始化：初始化是指<span lang="EN-US">JVM</span>调用该类或该接口的初始化方法。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><strong><span lang="EN-US">1.</span></strong><strong>第一步</strong><strong><span lang="EN-US"></span></strong></p> <p class="MsoNormal" align="left">启动一个单机<span lang="EN-US">Java</span>程序时，<span lang="EN-US">JVM</span>首先做的是另外创建一个<span lang="EN-US">Class</span>对象，用于表示包含<span lang="EN-US">public static void main(String [ ] args)</span>方法的<span lang="EN-US">Java</span>类。然后<span lang="EN-US">JVM</span>会链接并初始化该<span lang="EN-US">Java</span>类，调用<span lang="EN-US">main()</span>方法，并用<span lang="EN-US">main()</span>方法驱动所引用的其他类和接口的加载、链接和初始化过程。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><strong><span lang="EN-US">2.</span></strong><strong>加载</strong><strong><span lang="EN-US"></span></strong></p> <p class="MsoNormal" align="left">加载过程是由类加载器完成的，该加载器是<span lang="EN-US">ClassLoader</span>的子类，并且该类加载器会对所加载的类或接口进行一些校验检查。当表示已编译类或接口的二进制数据有错，则类或接口使用的类文件格式版本不被支持，类加载器找不到类或接口的定义，或者如果出现类循环，都会抛出异常。类循环是指类或接口的父类是其自身的情况。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">类加载器一般有两种类型：由<span lang="EN-US">JVM</span>提供的引导类加载器<span lang="EN-US">(bootstrap class loader)</span>和用户定义的类加载器。用户定义的类加载器也是<span lang="EN-US">Java</span>的<span lang="EN-US">ClassLoader</span>类的子类，用于从非标准的、用户定义的源创建<span lang="EN-US">Class</span>对象，以便提高安全性。例如，从加密文件中提取<span lang="EN-US">Class</span>对象。一个加载器可以将部分甚至整个加载过程委托给另一个加载器。最终生成<span lang="EN-US">Class</span>对象的加载器称为定义加载器<span lang="EN-US">(defining loader)</span>，而开始该加载过程的加载器称为启动加载器<span lang="EN-US">(initiating loader)</span>。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">使用默认引导类加载器的加载过程如下：根据所要加载的类文件，引导类加载器会判断自身是否已经成为该类的启动加载器。如果是，则<span lang="EN-US">Class</span>对象存在，加载器停止<span lang="EN-US">(</span>注意，加载一个类并不等于创建该类的一个实例，这一步骤仅仅是在<span lang="EN-US">JVM</span>中加入该类<span lang="EN-US">)</span>。如果类还没有加载，则加载器会搜索对应的类文件，并在找到后根据该类文件创建<span lang="EN-US">Class</span>对象。如果找不到类文件，那么就会产生<span lang="EN-US">NoClassDefFoundError</span>异常。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">使用用户定义类加载器时，整个加载过程稍有不同。与引导加载器一样，用户定义的加载器首先判断自身是否已经成为目标类文件的启动加载器。如果是，则<span lang="EN-US">Class</span>对象已经存在，加载器停止，而如果不是，用户定义的加载器会调用<span lang="EN-US">loadClass()</span>方法。<span lang="EN-US">loadClass()</span>方法返回所需的类文件并将表示类的二进制字节装配成<span lang="EN-US">ClassFile</span>结构，然后调用<span lang="EN-US">defineClass()</span>方法，由该方法从<span lang="EN-US">ClassFile</span>结构创建<span lang="EN-US">Class</span>对象。另外，<span lang="EN-US">loadClass()</span>方法也可以将加载过程委托给另一个类加载器。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><strong><span lang="EN-US">3.</span></strong><strong>链接</strong><strong><span lang="EN-US"></span></strong></p> <p class="MsoNormal" align="left">链接过程的第一步是校验需要链接的类文件。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">Java</span>类文件校验<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">由于<span lang="EN-US">JVM</span>与<span lang="EN-US">Java</span>编译器是完全分离的，因此，用来解释类文件的<span lang="EN-US">JVM</span>无法保证类文件的形式正确，甚至无法保证该文件确实由<span lang="EN-US">Java</span>编译器所生成。另一个问题在于继承与类兼容性。如果给定类文件所表示的类继承自另一个类文件表示的父类，那么<span lang="EN-US">JVM</span>必须确保该子类的类文件与父类的类文件兼容。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">JVM</span>会校验每个类文件是否满足<span lang="EN-US">Java</span>语言规范对类文件的约束，不过<span lang="EN-US">Java</span>类校验器与<span lang="EN-US">Java</span>语言无关。用某些其他语言编写的程序同样也能编译成类文件格式，编译之后，该类文件也能通过校验过程。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">校验过程分为<span lang="EN-US">4</span>个步骤：<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(1)</span>第一步由<span lang="EN-US">JVM</span>加载类文件并检查文件是否符合类文件的基本格式。类文件的长度必须准确。类文件必须确实表示类<span lang="EN-US">(</span>检查其中一个特殊数字<span lang="EN-US">)</span>。常量池中不能包含任何不可识别的信息，并且每个属性的长度正确。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(2)</span>校验过程的第二步在文件链接时进行。这一步执行的操作包括确保<span lang="EN-US">final</span>关键字约束的保留。这表示<span lang="EN-US">final</span>类不能派生子类，<span lang="EN-US">final</span>方法也不能被重写。然后确保常量池中的元素符合<span lang="EN-US">Java</span>语言的规定。验证常量池中的所有字段和方法引用，并检查每一个类<span lang="EN-US">(Object</span>类除外<span lang="EN-US">)</span>是否具有直接父类。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(3)</span>第三个校验步骤也在链接阶段进行。这一步检查类文件中引用的每一个方法，确保符合<span lang="EN-US">Java</span>语言对方法的规定。方法调用中参数的数量和类型必须正确。操作数栈必须总保持相同大小，并包含相同类型的值。局部变量在访问前应当包含合适的值。必须为字段指定正确类型的值。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><span lang="EN-US">(4)</span>校验的最后一步是处理第一次调用方法时出现的事件，并保证一切按规范进行。这些检查包括：确保给定类中存在某个引用的字段或引用的方法，确认引用的字段或引用的方法具有正确的描述符，并确保一个方法在运行时能够访问该引用字段或引用方法。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">准备<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">在校验类文件之后，<span lang="EN-US">JVM</span>准备初始化类，包括为类变量分配内存空间并设置为默认初始值。这些值是标准的默认值，例如<span lang="EN-US">int</span>类型为<span lang="EN-US">0</span>，<span lang="EN-US">Boolean</span>类型为<span lang="EN-US">false</span>等。在初始化阶段，这些值会设为程序相关的默认值。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">解析<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">在这一可选的步骤中，<span lang="EN-US">JVM</span>把运行时常量池中引用的符号解析成具体值。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left"><strong><span lang="EN-US">4.</span></strong><strong>初始化</strong><strong><span lang="EN-US"></span></strong></p> <p class="MsoNormal" align="left">链接过程完成后，会调用静态字段和静态初始化器。静态字段的值即使在类没有实例化时也能够访问得到，而静态初始化器用于单个表达式无法表示的静态初始化。<span lang="EN-US">JVM</span>把所有这类初始化器收集到一个特殊的方法中。例如，类所有初始化器的集合就是初始化方法<span lang="EN-US">&lt;clinit&gt;</span>。<span lang="EN-US"></span></p> <p class="MsoNormal" align="left">不过，<span lang="EN-US">JVM</span>在初始化一个类时不仅需要调用该类的初始化方法<span lang="EN-US">(</span>只有<span lang="EN-US">JVM</span>能够调用<span lang="EN-US">)</span>，而且需要初始化所有的父类<span lang="EN-US">(</span>即需要调用这些父类的<span lang="EN-US">&lt;clinit&gt;)</span>。结果就是，总是需要最先初始化<span lang="EN-US">Object</span>类。另外，包含应用程序<span lang="EN-US">main()</span>方法的类总是要初始化。<span lang="EN-US"></span></p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104862.htm">动物疫苗打几次有效（动物疫苗打一次管多长时间）</a></p>
                                        <p>下一个：<a href="/news/article-105549.htm">Spark原理篇之Spark Streaming转化操作和输出操作</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-9-free-node-subscribe-links.htm" title="「3月9日」最高速度20.1M/S，2025年Hiddify每天更新免费订阅节点地址分享">「3月9日」最高速度20.1M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-71062.htm" title="不用一滴油的炸鸡柳 香的做法是什么(香炸鸡柳的做法大全)">不用一滴油的炸鸡柳 香的做法是什么(香炸鸡柳的做法大全)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-hiddify-next-node-share.htm" title="「3月25日」最高速度19.7M/S，2025年Hiddify每天更新免费订阅节点地址分享">「3月25日」最高速度19.7M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-26-latest-hiddify-next-node.htm" title="「4月26日」最高速度19.4M/S，2025年Hiddify每天更新免费订阅节点地址分享">「4月26日」最高速度19.4M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-28-hiddify-next-node-github.htm" title="「4月28日」最高速度18.3M/S，2025年Hiddify每天更新免费订阅节点地址分享">「4月28日」最高速度18.3M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-5-hiddify-next-node.htm" title="「4月5日」最高速度20.2M/S，2025年Hiddify每天更新免费订阅节点地址分享">「4月5日」最高速度20.2M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-79136.htm" title="动物接种疫苗的方法有哪几种 动物接种疫苗的方法有哪几种类型">动物接种疫苗的方法有哪几种 动物接种疫苗的方法有哪几种类型</a></li>
                        <li class="py-2"><a href="/news/article-101618.htm" title="天津宠物交流群（天津宠物集市）">天津宠物交流群（天津宠物集市）</a></li>
                        <li class="py-2"><a href="/news/article-67147.htm" title="netty系列之:netty中的核心MessageToByte编码器">netty系列之:netty中的核心MessageToByte编码器</a></li>
                        <li class="py-2"><a href="/news/article-95051.htm" title="转载：Hadoop相关知识整理系列之一：HBase基本架构及原理">转载：Hadoop相关知识整理系列之一：HBase基本架构及原理</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>

        <!-- copyright section -->
    <div class="copyright">
        <div class="container">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>HiddifyFree免费节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
    </div>
    <!-- scrolltop section -->
    <a href="#top" class="go-top"><i class="fa fa-angle-up"></i></a>
    <!-- javascript js -->
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/nivo-lightbox.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/smoothscroll.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.nav.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/isotope.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>