<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifyfree.github.io/news/article-25299.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>JDK8新特性Optional工具类</title>
        <meta name="description" content="1. 基本概念  Java 8 中引入了一个有趣的特性是Optional类，该工具类的引入主要是为了解决空指针异常（NullPointException）。本质上，这是一个包含有可选值的包装类，意味着" />
        <link rel="icon" href="/assets/website/img/hiddifyfree/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyFree免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifyfree.github.io/news/article-25299.htm" />
    <meta property="og:site_name" content="HiddifyFree免费节点官网" />
    <meta property="og:title" content="JDK8新特性Optional工具类" />
    <meta property="og:image" content="https://hiddifyfree.github.io/uploads/20240811-1/762eca5d9963b4b33321788944b2544f.webp" />
        <meta property="og:release_date" content="2024-12-13T12:04:48" />
    <meta property="og:updated_time" content="2024-12-13T12:04:48" />
        <meta property="og:description" content="1. 基本概念  Java 8 中引入了一个有趣的特性是Optional类，该工具类的引入主要是为了解决空指针异常（NullPointException）。本质上，这是一个包含有可选值的包装类，意味着" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="JDK8新特性Optional工具类">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- stylesheet css -->
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo_themes/default/default.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/style.css">
    <!-- google web font css -->
    <link href='http://fonts.googleapis.com/css?family=Raleway:400,300,600,700' rel='stylesheet' type='text/css'>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FSSSCJKV0R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FSSSCJKV0R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".navbar-collapse" data-page="detail">
        <!-- navigation -->
    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                </button>
                                <a href="/" class="navbar-brand"><span>Hiddify Free</span></a>
                            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
    </div>
    <!-- home section -->
    <div id="home">
        <div class="container">
            <div class="row">
                <div class="col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6">
                    <h1>JDK8新特性Optional工具类</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- about section -->
    <div id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <h2><a id="1__2" rel="nofollow"></a>1. 基本概念</h2> <p> Java 8 中引入了一个有趣的特性是Optional类，该工具类的引入主要是为了解决空指针异常（NullPointException）。本质上，这是一个包含有可选值的包装类，意味着类本身亦可以有值也可以为Null。</p> <h2><a id="2_8" rel="nofollow"></a>2.方法</h2> <table> <thead> <tr> <th>方法</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>of()</td> <td>把指定的值封装成Optional对象并返回，如果参数为null，贼会抛出空指针异常（不可以传null值）</td> </tr> <tr> <td>ofNullable()</td> <td>把指定的值封装为Optional对象并返回，如果参数为null，则创建一个空的Optional对象（可以传null值）</td> </tr> <tr> <td>empty()</td> <td>创建一个空的Optional对象</td> </tr> <tr> <td>get()</td> <td>如果创建的Optional中有值存在，则返回此值，否则抛出NoSuchElementException</td> </tr> <tr> <td>orElse()</td> <td>如果创建的Optional中有值存在，则返回此值，否则返回一个默认值（即返回传入的参数）</td> </tr> <tr> <td>orElseGet()</td> <td>如果创建的Optional中有值存在，则返回此值，否则返回一个由Supplier接口（参数）生成的值</td> </tr> <tr> <td>orElseThrow()</td> <td>如果创建的Optional中有值存在，则返回此值，否则抛出一个由指定的Supplier（参数）接口生成的异常</td> </tr> <tr> <td>filter()</td> <td>如果创建的Optional中的值满足filter中的条件，则返回包含该值的Optional对象，否则返回一个空的Optional对象</td> </tr> <tr> <td>map()</td> <td>如果创建的Optional中有值存在，则应用提供的映射函数，如果结果不为空，则封装成Optional返回，否则返回一个空的Optional</td> </tr> <tr> <td>flagMap()</td> <td>如果创建的Optional中的值存在，就对该值执行提供的Function函数调用，返回一个Optional类型的值，否则就返回一个空的Optional对象</td> </tr> <tr> <td>isPresent()</td> <td>如果创建的Optional中的值存在，返回true，否则返回false</td> </tr> <tr> <td>ifPresent()</td> <td>如果创建的Optional中的值存在，则执行该方法的调用，否则什么也不做</td> </tr> </tbody> </table> <h2><a id="3_27" rel="nofollow"></a>3.方法详解</h2> <ol> <li> <p>of() 和 ofNullable()</p> <pre><code class="prism language-java"><span class="token comment">// 传入null值会抛出异常，所以参数必须确保非空</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> op<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"Ye"</span><span class="token punctuation">)</span></code></pre> <pre><code class="prism language-java"><span class="token comment">// 为指定的值创建Optional对象，不管所传入的值为null不为null，创建的时候都不会报错</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> nullOptional<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> nullOptional<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"Ye"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>当我们明确参数不为null时我们使用of()，否则我们应该使用ofNullable()来摆脱空指针异常都影响。</p> </li> <li> <p>empty</p> <pre><code class="prism language-java"><span class="token comment">// 创建一个为空的Optional对象</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> emptyOptional<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </li> <li> <p>get() | orElse() | orElseGet()</p> <ol> <li> <p>get()</p> <pre><code class="prism language-java"><span class="token comment">// 获取Optional对象中封装的值</span> String s<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"Value"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 当Optional对象封装的值为空的时候会抛出异常，所以一般可结合isPresent()使用</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> op<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"Ye"</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>op<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	String name<span class="token operator">=</span> op<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> </li> <li> <p>orElse() 和 orElseGet()</p> <pre><code class="prism language-java"><span class="token comment">// 当Optional对象中值为null时返回默认值，避免空指针异常的可能</span> String name<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ofElse</span><span class="token punctuation">(</span><span class="token string">"Ye"</span><span class="token punctuation">)</span></code></pre> <pre><code class="prism language-java"><span class="token comment">// 这个方法会在有值的时候返回值，如果没有值，它会执行作为参数传入的 Supplier(供应者) 函数式接口，并将返回其执行结果</span> User result<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>当参数都为一个方法的时候，如果Optional中封装的值为null，则两方法无差异；当Optional封装的值不为null的时候，orElse()仍然会执行参数中方法，orElseGet()则不会。这个区别使得两者在性能上有所差异。</p> </li> </ol> </li> <li> <p>orElseThrow()</p> <pre><code class="prism language-java"><span class="token comment">// 当Optional封装值为空的时候，会抛出你指定的异常</span> User result<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token keyword">new</span><span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p> 这个方法用于在对象为null时抛出我们想要的异常而非空指针，方便于定位和处理问题</p> </li> <li> <p>filter()</p> <pre><code class="prism language-java"><span class="token comment">// filter() 接受一个 Predicate 参数，返回测试结果为 true 的值。如果测试结果为 false，会返回一个空的 Optional。</span> Optional<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> op<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span> String<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 由于该方法返回的是Optional对象，这使得我们可以在一行代码中过滤符合指定条件的数据进行处理</span><span class="token comment">// 过滤出具有权限的user（或user为null也会返回true的方法），获取他们的值，如果为null则返回新user</span> User user<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>u<span class="token operator">-</span><span class="token operator">&gt;</span> u<span class="token punctuation">.</span><span class="token function">permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token function">creatNewUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> </li> <li> <p>map() 和 flatMap()</p> <pre><code class="prism language-java"><span class="token comment">// 如果创建的Optional中的值存在，对该值进行操作返回结果（一般用来转换值或取得其中属性），返回的值为Optional，可执行链式编程(后接orElse()等)</span> String userName<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>user<span class="token operator">-</span><span class="token operator">&gt;</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"姓名未填写"</span><span class="token punctuation">)</span></code></pre> <p>一般利用该方法进行封装值的转换和属性提取，避免了只能对原始类型Optional的操作和获取。</p> <pre><code class="prism language-java"><span class="token comment">// flatMap() 与 map()方法类似，但是参数Predicate返回的值必须是Optional，返回结果也不会进行封装</span> String userName<span class="token operator">=</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>user<span class="token operator">-</span><span class="token operator">&gt;</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"姓名未填写"</span><span class="token punctuation">)</span></code></pre> </li> <li> <p>isPresent() 和 ifPresent()</p> <pre><code class="prism language-java"><span class="token comment">// isPresent()可用来对Optional判空，在Optation内部代码中实现判断逻辑</span> Optional<span class="token punctuation">.</span>ofNullable<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// ifPresent()用于简化if结合判空的使用，内部传入Predicate参数，只进行内部处理没有返回值</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span> user<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> </li> </ol> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-24838.htm">养鱼专家在线咨询电话号码（养鱼师傅电话）</a></p>
                                        <p>下一个：<a href="/news/article-25300.htm">Centos7 离线安装 KVM，并安装 Csr1000v</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-43072.htm" title="厦门狗狗领养平台 厦门狗狗领养平台有哪些">厦门狗狗领养平台 厦门狗狗领养平台有哪些</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-hiddify-next-node.htm" title="「11月16日」最高速度22.8M/S，2024年Hiddify每天更新免费机场订阅节点链接">「11月16日」最高速度22.8M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-node-share-links.htm" title="「1月19日」最高速度21.8M/S，2025年Hiddify每天更新免费订阅节点地址分享">「1月19日」最高速度21.8M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-hiddify-next-github.htm" title="「11月30日」最高速度22.3M/S，2024年Hiddify每天更新免费机场订阅节点链接">「11月30日」最高速度22.3M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-2-hiddify-next-node-share.htm" title="「2月2日」最高速度20.2M/S，2025年Hiddify每天更新免费订阅节点地址分享">「2月2日」最高速度20.2M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-21611.htm" title="北京宠爱国际动物医疗机构地址（北京宠爱国际动物医疗机构地址查询）">北京宠爱国际动物医疗机构地址（北京宠爱国际动物医疗机构地址查询）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-free-node-subscribe.htm" title="「1月28日」最高速度20.6M/S，2025年Hiddify每天更新免费订阅节点地址分享">「1月28日」最高速度20.6M/S，2025年Hiddify每天更新免费订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-23910.htm" title="宠物粮加盟 宠物粮加盟店">宠物粮加盟 宠物粮加盟店</a></li>
                        <li class="py-2"><a href="/news/article-41092.htm" title="宠物粮批发网站哪个好一点（宠物粮从哪里进货便宜）">宠物粮批发网站哪个好一点（宠物粮从哪里进货便宜）</a></li>
                        <li class="py-2"><a href="/news/article-41090.htm" title="【kafka】一次磁盘故障后消费者无法消费">【kafka】一次磁盘故障后消费者无法消费</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>

        <!-- copyright section -->
    <div class="copyright">
        <div class="container">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>HiddifyFree免费节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
    </div>
    <!-- scrolltop section -->
    <a href="#top" class="go-top"><i class="fa fa-angle-up"></i></a>
    <!-- javascript js -->
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/nivo-lightbox.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/smoothscroll.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.nav.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/isotope.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>