<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifyfree.github.io/news/article-26207.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>vuex几大模块和Vuex助手使用详解</title>
        <meta name="description" content="Vuex 是一个专为 Vue.js 应用程序开发的状态管理库，用于保存用用程序的状态，即信息或数据，使得Vuex使应用程序的所有组件可以共享数据。每一个 Vuex 应用的核心就是 store（仓库），" />
        <link rel="icon" href="/assets/website/img/hiddifyfree/favicon.ico" type="image/x-icon"/>
    <!-- stylesheet css -->
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/nivo_themes/default/default.css">
    <link rel="stylesheet" href="/assets/website/css/hiddifyfree/style.css">
    <!-- google web font css -->
    <link href='http://fonts.googleapis.com/css?family=Raleway:400,300,600,700' rel='stylesheet' type='text/css'>
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FSSSCJKV0R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FSSSCJKV0R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".navbar-collapse" data-page="detail">
        <!-- navigation -->
    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                    <span class="icon icon-bar"></span>
                </button>
                                <a href="/" class="navbar-brand"><span>Hiddify Free</span></a>
                            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-right">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
            </div>
        </div>
    </div>
    <!-- home section -->
    <div id="home">
        <div class="container">
            <div class="row">
                <div class="col-md-offset-6 col-md-6 col-sm-offset-6 col-sm-6">
                    <h1>vuex几大模块和Vuex助手使用详解</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- about section -->
    <div id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理库，用于保存用用程序的状态，即信息或数据，使得Vuex使应用程序的所有组件可以共享数据。每一个 Vuex 应用的核心就是 store（仓库），包含着你的应用中大部分的状态 ( state )，改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。</p> <h2> <a id="1Vuex_1" rel="nofollow"></a>1、Vuex主要有以下几个模块</h2> <ol> <li>state：定义了应用程序的数据，可以设置默认的初始状态。</li> <li>getters：允许组件从 store 中获取数据 。</li> <li>mutations：是唯一更改 store 中状态的方法，且必须是同步函数。但不可以直接调用mutation，必须使用commit函数来告诉Vuex更新存储并提交更改。</li> <li>actions：执行异步操作来存取状态，但也不可以直接调用action，必须使用dispatch函数来执行。<br /> 代码演示：</li> </ol> <pre><code class="prism language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> 	<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 		<span class="token comment">//定义状态，并赋予初始值</span> 		state<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			msg<span class="token punctuation">:</span><span class="token string">'Vuex的使用'</span><span class="token punctuation">,</span> 			count<span class="token punctuation">:</span><span class="token number">0</span> 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//使用getter来返回状态</span> 		getters<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">msg</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> state<span class="token punctuation">.</span>msg<span class="token punctuation">;</span> 			<span class="token punctuation">}</span><span class="token punctuation">,</span> 			<span class="token function">count</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> state<span class="token punctuation">.</span>count<span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//可以理解为其他语言中的setter，改变状态的值，此处为把传进来的参数step累加到count中</span> 		mutations<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				state<span class="token punctuation">.</span>count <span class="token operator">+=</span> step<span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		<span class="token comment">//模拟服务器延迟1秒</span> 		<span class="token comment">//通过commit调用来触发mutations对象中的increment方法，并把参数step传递给increment</span> 		actions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 					context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'increment'</span><span class="token punctuation">,</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span>	 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">//创建Vue实例</span> 	<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 		el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span> 		 		computed<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token comment">//可以直接通过计算属性直接获取store.state中的状态</span> 			<span class="token function">msg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>msg<span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 			<span class="token comment">//通过计算属性来返回getters中的count</span> 			<span class="token function">counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">return</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>count<span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span><span class="token punctuation">,</span> 		methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 			<span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token comment">//调用dispatch方法来派发actions中的increment方法，并把参数2传递给increment</span> 				store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'increment'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span> </code></pre> <h2> <a id="2Vuex_66" rel="nofollow"></a>2、Vuex助手</h2> <p>Vuex为我们提供了一些辅助工具，如mapStates，mapGetters，mapMutations，mapActions，从而来减少繁杂的工作量。<br /> 对于使用mapStates,mapGetters，可以把所有的state，getter添加到计算属性中，而不用向上面代码那样逐个添加。<br /> 在使用这些助手时，必须引入。拿mapGetters举例，其他类似。</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>mapGetters<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span> </code></pre> <p>代码演示：</p> <pre><code class="prism language-javascript">computed<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span>mapState<span class="token punctuation">{<!-- --></span><span class="token punctuation">[</span> 		<span class="token string">'state1'</span><span class="token punctuation">,</span> 		<span class="token string">'state2'</span><span class="token punctuation">,</span> 	<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 	<span class="token operator">...</span>mapGetters<span class="token punctuation">{<!-- --></span><span class="token punctuation">[</span> 		<span class="token string">'count1'</span><span class="token punctuation">,</span> 		<span class="token string">'count2'</span><span class="token punctuation">,</span> 	<span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>对于mapMutations,mapActions，可以在methods属性中使用，把多个mutation和action映射到应用程序。<br /> 代码演示：</p> <pre><code class="prism language-javascript">methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span> 		<span class="token comment">//mut1将this.mut1()映射到this.$store.commit('mut1'),mut2类似</span> 		<span class="token comment">//这样就不同创建每个方法，派发每个action</span> 		<span class="token string">'mut1'</span><span class="token punctuation">,</span> 		<span class="token string">'mut2'</span> 	<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>代码演示：</p> <pre><code class="prism language-javascript">methods<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 	<span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span> 		<span class="token comment">//act1将this.act1()映射到this.$store.dispatch('act1'),act2类似</span> 		<span class="token string">'act1'</span><span class="token punctuation">,</span> 		<span class="token string">'act2'</span> 	<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="3Vuex_114" rel="nofollow"></a>3、Vuex模块</h2> <p>当应用程序很大时，需要划分模块，Vuex.Store实例中将增加mudules对象。<br /> 把state，getter，mutation，action对象创建在一个单独的xxx.js文件中，xxx.js在modules目录下。<br /> 代码演示：</p> <pre><code class="prism language-javascript"><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	state1<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	get1<span class="token punctuation">:</span>state <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>state1 <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	initState<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	setState<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">//导出以上四个对象</span> <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{<!-- --></span> 	state<span class="token punctuation">,</span> 	getters<span class="token punctuation">,</span> 	mutations<span class="token punctuation">,</span> 	actions <span class="token punctuation">}</span> </code></pre> <p>使用模块，在yyy.js文件中引入模块，yyy.js在store目录下。<br /> 代码演示：</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span> impoet Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span> <span class="token keyword">import</span> xxx <span class="token keyword">from</span> <span class="token string">'./modules/xxx'</span><span class="token punctuation">;</span>  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 	modules<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span> 		<span class="token comment">//对应上面引入的xxx</span> 		xxx 	<span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>另外，由于Vuex中所有内容共享相同的全局名称空间，当在两个不同文件中分别命名相同的state或getter或mutation或action，就会发生冲突，报错duplicate getter key。<br /> 可以在Vuex.store文件顶部设置namespaced:true，用于分解每个名称空间的模块。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-25763.htm">python类内部成员的访问及外部访问</a></p>
                                        <p>下一个：<a href="/news/article-26208.htm">vue-cli4.0脚手架中路由的配置过程</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-23-hiddify-next-github.htm" title="「10月23日」最高速度20.8M/S，2024年Hiddify每天更新免费机场订阅节点链接">「10月23日」最高速度20.8M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-1-node-share.htm" title="「9月1日」最高速度22M/S，2024年Hiddify每天更新免费机场订阅节点链接">「9月1日」最高速度22M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-11-hiddify-next-node-share.htm" title="「12月11日」最高速度20M/S，2024年Hiddify每天更新免费机场订阅节点链接">「12月11日」最高速度20M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-21-hiddify-next-windows.htm" title="「8月21日」最高速度19M/S，2024年Hiddify每天更新免费机场订阅节点链接">「8月21日」最高速度19M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share-links.htm" title="「11月21日」最高速度22M/S，2024年Hiddify每天更新免费机场订阅节点链接">「11月21日」最高速度22M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-26-hiddify-next-node-share.htm" title="「8月26日」最高速度21.8M/S，2024年Hiddify每天更新免费机场订阅节点链接">「8月26日」最高速度21.8M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-hiddify-next-windows.htm" title="「11月7日」最高速度19M/S，2024年Hiddify每天更新免费机场订阅节点链接">「11月7日」最高速度19M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-2-node-share-links.htm" title="「10月2日」最高速度20.4M/S，2024年Hiddify每天更新免费机场订阅节点链接">「10月2日」最高速度20.4M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-24838.htm" title="养鱼专家在线咨询电话号码（养鱼师傅电话）">养鱼专家在线咨询电话号码（养鱼师傅电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-21-free-subscribe-node.htm" title="「9月21日」最高速度19.2M/S，2024年Hiddify每天更新免费机场订阅节点链接">「9月21日」最高速度19.2M/S，2024年Hiddify每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>

        <!-- copyright section -->
    <div class="copyright">
        <div class="container">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                    <p>HiddifyFree免费节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
    </div>
    <!-- scrolltop section -->
    <a href="#top" class="go-top"><i class="fa fa-angle-up"></i></a>
    <!-- javascript js -->
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/nivo-lightbox.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/smoothscroll.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/jquery.nav.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/isotope.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifyfree/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>